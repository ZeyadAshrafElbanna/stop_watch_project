/*
 * project.c
 *
 *  Created on: 15 Sept 2023
 *      Author: Zeyad El-banna
 */

#include <avr/interrupt.h>
#include <avr/io.h>
#include <util/delay.h>

unsigned long min_ticks = 0;
unsigned long hour_ticks = 0;
unsigned char sec_1 = 0;
unsigned char min_1 = 0;
unsigned char hour_1 = 0;
unsigned char sec_2 = 0;
unsigned char min_2 = 0;
unsigned char hour_2 = 0;
void min_display(void);
void hour_display(void);
void Timer1_init(void);
int main (void)
{
    DDRC |= 0x0F;
    PORTC &= 0xF0;
    DDRA |= 0x3F;
    PORTA &= 0xC0;
    Timer1_init();
	while(1)
	{
		PORTC = ( PORTC & 0xF0 ) | sec_1 ;
		PORTA = 0x01 ;
		_delay_ms(3);
		PORTC = ( PORTC & 0xF0 ) | sec_2 ;
		PORTA = 0x02 ;
		_delay_ms(3);
		PORTC = ( PORTC & 0xF0 ) | min_1 ;
		PORTA = 0x04 ;
		_delay_ms(3);
		PORTC = ( PORTC & 0xF0 ) | min_2 ;
		PORTA = 0x08;
		_delay_ms(3);
		PORTC = ( PORTC & 0xF0 ) | hour_1 ;
		PORTA = 0x10 ;
		_delay_ms(3);
		PORTC = ( PORTC & 0xF0 ) | hour_2 ;
		PORTA = 0x20;
		_delay_ms(3);
 	}
	return 0;
}
void Timer1_init(void)
{
	TCCR1A = (1<<FOC1A) | (1<<WGM12);
	TCCR1B = (1<<WGM12) | (1<<CS10) | (1<<CS11);
	TCNT1 = 0;
	OCR1A = 15625 ;
	TIMSK |= (1<<OCIE1A) ;
	SREG |= (1<<7);
}
ISR (TIMER1_COMPA_vect)
{
	sec_1 ++;
	min_ticks ++;
	hour_ticks ++;
	if (min_ticks == 937500)
	{
		min_1 ++;
		min_display();
		min_ticks = 0;
	}
	if(hour_ticks == 56250000)
	{
		hour_1 ++;
		hour_display();
		hour_ticks = 0 ;
	}
	if(sec_1 > 9)
	{
		sec_1 = 0;
		sec_2 ++ ;
	}
	if(sec_2 > 6)
	{
		sec_2 = 0 ;
		sec_1 = 0;
	}
}

void min_display(void)
{
	if(min_1 > 9)
		{
			min_2 ++;
			min_1 = 0;
		}
	if(min_2 > 6)
	{
		min_2=0;
		min_1 = 0;
	}
}
void hour_display(void)
{
	if(hour_1 > 9 && hour_2 < 2)
			{
				hour_2 ++;
				hour_1 = 0;
			}
	else if(hour_1 > 4 && hour_2 == 2)
	{
		hour_2 = 0;
		hour_1 = 0;
	}
}
